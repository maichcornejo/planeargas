services:

  database:
    image: postgres:alpine
    container_name: database
    restart: always
    ports:
      - "28001:5432"  # Mapea el puerto interno 5432 a 28001 en el host
    volumes:
      - postgres:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: PLA
      POSTGRES_PASSWORD: PLA
      POSTGRES_DB: planeargas

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: backend
    volumes:
      - ./backend:/app
      - ../common/backend/m2:/root/.m2
    environment:
      - FLASK_APP=app.app  # Apunta a la f√°brica de aplicaciones
      - FLASK_ENV=development 
    working_dir: /app
    command: flask run --host=0.0.0.0 --port=8080
    ports:
      - "28002:8080"  # Mapea el puerto interno 8080 a 28002 en el host
      - "28004:5005"  # Mapea el puerto interno 5005 a 28004 en el host
    depends_on:
      - database

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend
    working_dir: /home/node/cli
    command: ng serve --host=0.0.0.0
    restart: always
    ports:
      - "28003:4200"  # Mapea el puerto interno 4200 a 28003 en el host
    stdin_open: true
    tty: true
    volumes:
      - ./frontend:/home/node      
    # Activar lo siguiente luego del taller End-to-end
    # depends_on: 
      # - backend

  testing:
    image: node:alpine
    container_name: testing
    profiles:
      - test
    working_dir: /home/node
    volumes:
      - ./testing:/home/node
      - ../common/testing/node_modules:/home/node/node_modules      
    command: npm test
    # comentar esto
    # depends_on:
    #   - backend

volumes:
  postgres:
