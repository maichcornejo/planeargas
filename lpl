#!/bin/bash

# Crea el directorio para las instalaciones
PLANEARGAS_DIR="../common/m2"
 
if [ ! -d "$PLANEARGAS_DIR" ]; then
  mkdir -p $PLANEARGAS_DIR
  echo "Se creó el directorio $PLANEARGAS_DIR
"
fi

# Comandos
case "$1" in
  build ) echo "Instalando..."
    docker compose -f docker-compose.yml build
    # docker compose -f docker-compose.yml run frontend ./install.sh
    # docker compose -f docker-compose.yml
    ;;
  up ) echo "Iniciando servidores..."
    docker compose -f docker-compose.yml up -d
    ;;
  down ) echo "Deteniendo servidores..."
    docker compose -f docker-compose.yml down
    ;;
  restart ) echo "Reiniciando servicio $2..."
    docker compose -f docker-compose.yml restart $2
    ;;
  restart-all ) echo "Reiniciando servidores..."
    docker compose -f docker-compose.yml restart
    ;;
  log ) docker compose -f docker-compose.yml logs -f $2
    ;;
  logs ) docker compose -f docker-compose.yml logs -f
    ;;
  sh ) echo "Conectando con $2"
    docker exec -it $2 sh
    ;;
  mvn ) echo "Ejecutando Maven en servidor backend: $2"
    docker exec -t backend mvn $2
    ;;
  test ) 
    if [ -z "$2" ]; then
      echo "Ejecutando todos los tests"
      docker compose run --rm testing
    else
      echo "Ejecutando test para $2"
      docker compose run --rm testing npm test features/features/$2.feature
    fi
    ;;
  staging ) echo "Cargando staging $2"
    cat ./staging/$2.sql | docker exec -i database psql -q -U APP -d labprog
    ;;
  superTest ) echo "Testing super"
    cat ./staging/$2.sql | docker exec -i database psql -q -U APP -d labprog
    docker compose run --rm testing
    ;;
  * ) echo "Opción inválida."
    ;;
esac
